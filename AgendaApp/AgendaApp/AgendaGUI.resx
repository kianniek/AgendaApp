<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>